#+TITLE: Steam Guess
#+AUTHOR: Gabriel Antunes
Steam guess is a game where a Steam game review is shown and the player must
guess what game the text is about.
* DONE Main Game Loop
CLOSED: [2016-08-15 Seg 00:14]
1) The player sees a game review and gets to guess a game
   There are 5 different options.
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - DayZ
     - GTA V
     - Skyrim
     - Dying Light
     - Super Meat Boy
   + "I've nearly finished building my character"
     - Fallout 3
     - Dying Light
     - Super Meat Boy
     - Just Cause 3
     - Final Fantasy XIII
   :end:
2) Player guesses
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - GTA V
   :end:
3) The answer is revealed
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - DayZ
   :end:
4) Right answer means an extra point and wrong answer means one less life
* TODO Database Construction
** TODO Database schema definition
#+BEGIN_SRC json schema
app : {
  review : {
    content : "string",
    game : game,
    commonChoices : [game, game],
    wins : 0,
    losses : 0
  },
  game : {
    title : "string",
    similar : [game, game]
  }
}
#+END_SRC
** TODO Review hunter web crawler                                  :js:node:
Ok, this one might be tricky but maybe I could make a web crawler that
captures review texts and shows the text on the screen, followed by a
prompt: "do you want to use this review? (y/n)"
*** TODO any functionality really
*** TODO ctrl + z functionality
** TODO Script that abstracts a review page into JSON              :js:node:
*** DONE extracting information
CLOSED: [2016-08-14 Dom 22:44]
:extractFromLink:
#+BEGIN_SRC javascript extractor
var cheerio = require('cheerio');
var request = require('request');
var reviews = [];
function getHTML(err, resp, html) {
    if (err) {
        return console.error(err);
    }
    const $ = cheerio.load(html);
    var review = {};
    review.content = $('#ReviewText').html();
    review.gameUrl = $('a.panel_btn', '#rightContents').next().attr('href');
    review.game = review.gameUrl.split('/');
    review.game = review.game[review.game.length - 1];
    review.rating = $('.ratingSummary').html();
    review.commentCount = $('.commentthread_count_label').children().first().html();
    review.author = {
        username: $('.profile_small_header_name').children().first().html(),
        profileUrl: $('.profile_small_header_name').children().attr('href')
    };
    console.log(review);
}
#+END_SRC
:END:
*** TODO extracting pure information
:makingOf:
Okay, so let's begin.
I just found this in the reviews page.
#+BEGIN_SRC html suspiciousDiv
<div class="apphub_GetMoreContentWait" id="action_wait" style="display: none;">
#+END_SRC
This is the <div> that apppears when new content is loading.
Hopefully this means there's important code regarding getting new content in apphub.js
...
Cool. Theres a waitingForContent variable in apphub_home.js.
...
Just take a lookt at this: 
#+BEGIN_SRC javascript http://steamcommunity-a.akamaihd.net/public/javascript/apphub_home.js/CheckForMoreContent()
$( 'MoreContentForm' + currentPage ).request( {
  onComplete: function( transport )
  {
    RecordAJAXPageView( transport.request.url );
  },
  onFailure: function()
  {
    DoneWaitingForContent();
  },
  onException: function()
  {
    DoneWaitingForContent();
  },
  onSuccess: function( transport )
  {
    AddContentToPage( $J(transport.responseText) );
  }
} );
#+END_SRC
[[file:crawler.js][Let's make our own crawler!]]
*** TODO saving as .json
*** TODO importing .json
[[file:extractor.js]]
** TODO JSON upload to the database
* TODO Self calibrating difficulty
*** TODO Additional choices definition algorithm
*** TODO Common Choice and Choice Blacklist interactive dashboard
This dashboard should show a mysterious review and a lot of game choices.
You can decide how much each choice is fit to the game.
 Example
  + "literally wont start but im sure its a great game"
    + Fallout 3 (0)
    + Skyrim (-2)
    + GTA V (-2)
    + Final Fantasy XIII (-2)
    + DayZ (+2)
  + "I've nearly finished building my character"
    + Fallout 3 (+2)
    + Super Meat Boy (-2)
    + Just Cause 3 (-2)
    + Final Fantasy XIII (0)
    + DayZ (+2)
    + Dying Light (+2)
* TODO Deployment
** DONE Github project
CLOSED: [2016-08-13 S치b 23:03]
[[http://github.com/muthdra/steamguess]]
** DONE Firebase project                                  :firebase:html:js:
CLOSED: [2016-08-13 S치b 16:20]
What's up with this URL? "-3d25e"?
[[https://steamguess-3d25e.firebaseapp.com/][Landing Page]]
[[https://steamguess-3d25e.firebaseio.com/][Firebase Console]]
** DONE Firebase integration                                   :firebase:js:
CLOSED: [2016-08-13 S치b 17:02]
[[file:js/main.js]]
** TODO CSS                                                       :css:html:
*** DONE HTML5 Boilerplate
CLOSED: [2016-08-13 S치b 16:20]
[[file:css/normalize.min.css]]
*** TODO Responsiveness
*** TODO Custom Styles
** TODO Core HTML/JS game                                      :css:html:js:
*** TODO Playable MVP 
*** TODO Security
**** TODO Captchas
**** TODO 10 second wait rule
The 10 second wait rule determines that a player can only send a
batch (10) of reviews after waiting for 10 seconds.
** TODO Ads integration                                      :firebase:html:
* TODO Android App
** TODO Create Google Play account
