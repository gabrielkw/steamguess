#+TITLE: Steam Guess
#+AUTHOR: Gabriel Antunes
Steam guess is a game where a Steam game review is shown and the player must
guess what game the text is about.
* DONE Main Game Loop
CLOSED: [2016-08-15 Seg 00:14]
1) The player sees a game review and gets to guess a game
   There are 5 different options.
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - DayZ
     - GTA V
     - Skyrim
     - Dying Light
     - Super Meat Boy
   + "I've nearly finished building my character"
     - Fallout 3
     - Dying Light
     - Super Meat Boy
     - Just Cause 3
     - Final Fantasy XIII
   :end:
2) Player guesses
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - GTA V
   :end:
3) The answer is revealed
   :examples:
   + "Even a locomotive from the 1800's has a better engine than this!"
     - DayZ
   :end:
4) Right answer means an extra point and wrong answer means one less life
* DONE Deployment
CLOSED: [2016-08-13 Sáb 17:02]
** DONE Github project
CLOSED: [2016-08-13 Sáb 23:03]
[[http://github.com/muthdra/steamguess]]
** DONE Firebase project                                  :firebase:html:js:
CLOSED: [2016-08-13 Sáb 16:20]
What's up with this URL? "-3d25e"?
[[https://steamguess-3d25e.firebaseapp.com/][Landing Page]]
[[https://steamguess-3d25e.firebaseio.com/][Firebase Console]]
** DONE Firebase integration                                   :firebase:js:
CLOSED: [2016-08-13 Sáb 17:02]
[[file:js/main.js]]
* TODO Database Construction
** TODO Database schema definition
#+BEGIN_SRC json schema
app : {
  review : {
    content : "string",
    game : game,
    commonGuesses : [game, game],
    wins : 0,
    losses : 0
  },
  game : {
    title : "string",
    similar : [game, game]
  }
}
#+END_SRC
** DONE Script that abstracts a review page into JSON              :js:node:
CLOSED: [2016-08-19 Sex 23:22]
*** DONE extracting information
CLOSED: [2016-08-14 Dom 22:44]
[[file:extractor.js]]
*** DONE extracting pure information
CLOSED: [2016-08-19 Sex 23:22]
[[file:crawler.js]]
**** DONE saving as .json
CLOSED: [2016-08-19 Sex 23:22]
** DONE JSON upload to the database
CLOSED: [2016-08-20 Sáb 03:03]
* TODO Self calibrating difficulty
*** DONE Similarity Algorithm definition
CLOSED: [2016-08-16 Ter 20:12]
[[file:simcalc.js]]
I'm going to use the [[https://en.wikipedia.org/wiki/Elo_rating_system][Elo rating system]] like so:
s[i] += Math.pow(10,(s[i] / 400)) * weight;
*** TODO Additional choices definition algorithm
*** TODO Common Choice and Choice Blacklist interactive dashboard
This dashboard should show a review and a lot of game choices.
You can decide how much each choice is fit to the game.
 Example
  + "literally wont start but im sure its a great game"
    + Fallout 3 (0)
    + Skyrim (-2)
    + GTA V (-2)
    + Final Fantasy XIII (-2)
    + DayZ (+2)
  + "I've nearly finished building my character"
    + Fallout 3 (+2)
    + Super Meat Boy (-2)
    + Just Cause 3 (-2)
    + Final Fantasy XIII (0)
    + DayZ (+2)
    + Dying Light (+2)
* Database population
** TODO Insert tons of reviews
* TODO Heroku Server
* TODO Web App
** TODO CSS                                                       :css:html:
*** DONE HTML5 Boilerplate
CLOSED: [2016-08-13 Sáb 16:20]
[[file:css/normalize.min.css]]
*** DONE Styles
CLOSED: [2016-08-20 Sáb 03:07]
[[https://getmdl.io]]
*** TODO Responsiveness
*** TODO Custom Styles
** TODO Core HTML/JS game                                      :css:html:js:
*** TODO Playable MVP 
*** TODO Security
**** TODO Captchas
**** TODO 10 second wait rule
The 10 second wait rule determines that a player can only send a
batch (10) of reviews after waiting for 10 seconds.
** TODO Ads integration                                      :firebase:html:
* TODO Android App
** TODO Create Google Play account
